[project]
name = "eth-finetuning-cookbook"
version = "0.1.0"
description = "Educational cookbook for fine-tuning language models on Ethereum transaction data using QLoRA"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Ethereum Fine-Tuning Cookbook Contributors"}
]
keywords = ["ethereum", "blockchain", "machine-learning", "fine-tuning", "qlora", "transformers", "education"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core Ethereum interaction
    "web3>=6.11.3",
    "eth-abi>=4.2.1",
    
    # Data processing
    "pandas>=2.1.4",
    "pyarrow>=14.0.1",
    
    # Machine Learning & Fine-Tuning
    "torch>=2.1.2",
    "transformers>=4.36.2",
    "peft>=0.7.1",
    "bitsandbytes>=0.41.3",
    "accelerate>=0.25.0",
    "datasets>=2.16.1",
    
    # CLI & Utilities
    "click>=8.1.7",
    "pyyaml>=6.0.1",
    "tqdm>=4.66.1",
    
    # Evaluation metrics
    "textstat>=0.7.3",
    "scikit-learn>=1.3.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "jupyter>=1.0.0",
    "ipywidgets>=8.1.1",
]

[project.urls]
Homepage = "https://github.com/your-org/eth-finetuning-cookbook"
Documentation = "https://github.com/your-org/eth-finetuning-cookbook/tree/main/docs"
Repository = "https://github.com/your-org/eth-finetuning-cookbook"
Issues = "https://github.com/your-org/eth-finetuning-cookbook/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["scripts"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=scripts",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["scripts"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
